name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin' 
        java-package: 'jdk'

    - name: Install msmtp
      run: sudo apt-get install -y msmtp
      
    - name: Build with Maven
      run: mvn clean package --batch-mode

      
    - name: Upload JAR file
      uses: actions/upload-artifact@v3
      with:
        name: sampleapp
        path: target/*.jar

    - name: Configure msmtp
      run: |
        echo "account default" > ~/.msmtprc
        echo "host smtp.gmail.com" >> ~/.msmtprc
        echo "port 587" >> ~/.msmtprc
        echo "auth login" >> ~/.msmtprc
        echo "user ${{ secrets.SMTP_USER }}" >> ~/.msmtprc
        echo "password ${{ secrets.SMTP_PASS }}" >> ~/.msmtprc
        echo "tls on" >> ~/.msmtprc
        echo "tls_trust_file /etc/ssl/certs/ca-certificates.crt" >> ~/.msmtprc
        echo "from simone.smyth56@gmail.com" >> ~/.msmtprc
        chmod 600 ~/.msmtprc

    - name: Send notification on success
      if: success()
      run: echo -e "Subject:Build Success\n\nThe build succeeded!" | msmtp simone.smyth56@gmail.com

    - name: Send notification on failure
      if: failure()
      run: echo -e "Subject:Build Failure\n\nThe build failed. Please check the logs for more details." | msmtp simone.smyth56@gmail.com

      
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        java-package: 'jdk'
        
    - name: Run tests
      run: mvn test --batch-mode

    - name: Package the application
      run: mvn package --batch-mode

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: target/surefire-reports/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download JAR file
      uses: actions/download-artifact@v3
      with:
        name: sampleapp

    - name: Deploy to Server
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        scp -o StrictHostKeyChecking=no target/*.jar $SERVER_USER@$SERVER_HOST:/path/to/deploy
        ssh $SERVER_USER@$SERVER_HOST << 'EOF'
        # Commands to start the application on your server
        java -jar /path/to/deploy/sampleapp.jar &
        EOF
